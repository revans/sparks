$stdout.sync = true

ENV["RACK_ENV"] ||= "development"
require 'pathname'
require 'logger'
require 'yaml'

require 'bundler'
Bundler.require(:default, ENV["RACK_ENV"])

module <%= @appname.capitalize %>
  class Api < Sinatra::Base

    # Before Filter for handling HTTP Cache-Control
    # before do
    #   cache_control :public, :must_revalidate, max_age: 60
    #   expires 500,  :public, :must_revalidate
    # end

    # general default configuration
    configure do
      set :public_folder,     Sparks.public_file
      set :views,             Sparks.view_files
      set :show_exceptions,   false
      set :connections,       []
      # set :server,            'thin'

      # mime_type :plain, 'text/plain'
      # enable :sessions
      # enable :logging
      # enable :logging, :dump_errors, :raise_errors
    end

    ## Environment Specific Configuration
    #
    configure :development do
      # enable :sessions, :logging, :dump_errors, :raise_errors
      enable :show_exceptions
    end

    # configure :test         do; end
    # configure :staging      do; end

    # configure :production do
    #   require 'rack/cache'
    #   use Rack::Cache
    # end

    # HTTP Error Handling
    not_found do
      # do something, return a 404 page
    end

    # Application Error Handling
    error do
      # Log an Error
    end

    # require application files
    # Sparks.load!

    # connection to sql
    # DB, Sequel::Model.db = Sparks::DB::Credentials.connect!(Sparks.load_database_config)

    # Load Sequel plugins
    # Sequel::Model.plugin :touch # defaults to updated_at

    # Sequel Extensions
    # Sequel.extension :migration, :core_extensions, :inflector

    # Sequel Settings
    # Sequel.application_timezone = :utc
    # Sequel.database_timezone    = :utc

  end
end

## Application.rb
#
# This should be totally configurable to set your application and directory
# structure to best reflect the domain of the application in which you are
# building.
#
## Necessary
#
# Include Rack Security apps
# Include Rack Caching
#
## Optional
#
# Include Rack CoffeeScript
# Include Rack Sass

## For this app, this is how I'll set it up
#
# load files
# Dir.glob('./app/{routes,models}/*.rb').each { |file| require file }
